{"_id":{"$oid":"57a2ae929e64e91aafb56a11"},"id":1.0,"name":"Task1 (b)","testCase":[{"code":"replaceDollarSign(input)","answer":"I have 300 dollars in my left pocket and 200 dollars in my right pocket.","output":"","match":false},{"code":"replaceDollarSign(\"$421\")","answer":"421 dollars","output":"","match":false}],"description":"You are given a variable that contains a text. \n\nvar task1 = 'I have $300 in my left pocket and $200 in my right pocket.'\n\nWrite a function to replace dollar sign '$' in front of the numbers with the word 'dollars' after them. (e.g. $300 -\u003e 300 dollars) Your answer should like this 'I have 300 dollars in my left pocket and 200 dollars in my right pocket.'","startercode":"var input = 'I have $300 in my left pocket and $200 in my right pocket.';\n\nfunction replaceDollarSign(string){\n\u0009console.log(\"you can use console.\");\n\u0009return \"hello world\";\n}\n\nreplaceDollarSign(input);","level1":"You can convert the string down to an array and manipulate the array.","level2":"You can use .split(' '), then find the array element that starts with '$' using charAt('$') and remove the dollar sign, then splice the word 'dollar' in after that element using .splice(index,0,'dollars'). Finally join the array back to string with .join(' ') and console log it out.","code":"var input = 'I have $300 in my left pocket and $200 in my right pocket.';\r\n\r\nfunction replaceDollarSign(input){\r\n\u0009var ans = input.split(' ');\r\n    for(var i = 0; i \u003c ans.length; i++){\r\n       if(ans[i].charAt(0)=='$'){\r\n           ans[i] = ans[i].substring(1,ans[i].length)\r\n           ans.splice(i+1,0,'dollars')\r\n       }\r\n    }\r\n    return ans.join(\" \");\r\n}\r\n\r\nreplaceDollarSign(input);\r\n\r\n","completeAnswer":"You can convert the string down to an array and manipulate the array. You can use .split(' '), then find the array element that starts with '$' using charAt('$') and remove the dollar sign, then splice the word 'dollar' in after that element using .splice(index,0,'dollars'). Finally join the array back to string with .join(' ') and console log it out."}
{"_id":{"$oid":"57a2aeb89e64e91aafb56a12"},"id":2.0,"name":"Task 2 (b)","description":"The following code is supposed to print out [0,1,2,3,4]. Please rewrite it so that the code prints out the desired value. Please do not remove setTimeout function.\n\n","testCase":[{"code":"NEED TO CHANGE THE TASK","answer":"I have 300 dollars in my left pocket and 200 dollars in my right pocket.","output":"","match":true},{"code":"replaceDollarSign(\"$421\")","answer":"421 dollars","output":"","match":true}],"startercode":"var a = [];\nfor( var j = 0; j \u003c 5; j++ )\n{\n   setTimeout ( function () {\n       a.push(j)\n       console.log(a);\n   }, j);\n}","level1":"It will output 5,5,5,5,5. Because settimeout is asynchronous function and for loop is synchronous method.","level2":"The erroneous output is returned because j is incremented after each timeout is created. Then when the callback function is called, it looks for jâ€™s value which is always 5. The solution to this is to add some arguments that would store the current value of j. (using closure)","code":"var a = [];\n\nfor( var j = 0; j \u003c 5; j++ )\n{\n   (function (j)  {\n      setTimeout(function () {\n          a.push(j)\n          console.log(a);\n       }, j);\n   }) (j);\n}\n\n"}
{"_id":{"$oid":"57a2aec29e64e91aafb56a13"},"id":3.0,"name":"Task 3 (b)","description":"The desired return value of test(3) is [0,1,2]. Please correct this code to achieve the correct output.","testCase":[{"code":"test(3)","answer":[0.0,1.0,2.0],"output":"","match":false},{"code":"test(5)","answer":[0.0,1.0,2.0,3.0,4.0],"output":"","match":false}],"startercode":"function test(num){\r\n    \r\n    var a = [],\r\n    funcs = [];\r\n    for (var i = 0; i \u003c num; i++) {          // let's create 3 functions\r\n    funcs[i] = function() {            // and store them in funcs\r\n        a.push(i); // each should log its value.\r\n    };\r\n    }\r\n    for (var j = 0; j \u003c num; j++) {\r\n        funcs[j]();                        // and now let's run each one to see\r\n    }\r\n    \r\n    return a;\r\n}","level1":"Well, the problem is that the variable i, within each of your anonymous functions, is bound to the same variable outside of the function.","level2":"What you want to do is bind the variable within each function to a separate (using .bind(), unchanging value outside of the function.","code":"function test(num){\r\n    var a = [],\r\n    funcs = [];\r\n\r\n    function log(x) {\r\n        a.push(x);\r\n    }\r\n    \r\n    for (var i = 0; i \u003c num; i++) {\r\n        funcs[i] = log.bind(this, i);\r\n    }\r\n    \r\n    for (var j = 0; j \u003c num; j++) {\r\n        funcs[j]();\r\n    }\r\n    return a;\r\n}\r\n\r\n"}
{"_id":{"$oid":"57a2aed59e64e91aafb56a14"},"id":4.0,"name":"Task 4 (b)","description":"Write Javascript code to display the current date in this format: Tuesday, June 21, 2016.","testCase":[{"code":"NEED TO CHANGE THE TASK","answer":[0.0,1.0,2.0],"output":"","match":true},{"code":"datenow()","answer":[0.0,1.0,2.0,3.0,4.0],"output":"","match":true}],"startercode":"function datenow(time){\n\u0009var today;\n\u0009//your code goes here\n\u0009console.log(today)  //should be a string\n}\n\n","level1":"You need to defind array to store the names of 7 days in a week, and 12 months in a year. Then you need to find out which day, month, and year it is. ","level2":"You can use .getDay(), getMonth(), and getYear() to find out each value. But for year, you have to convert it to 4 digits using (year \u003c 1000) ? year + 1900 : year;\n\nTHe final answer is a string and you need to combine these 3 values split by comma. ","code":"var now = new Date();\n\nvar days = new Array(\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\");\n\nvar months = new Array(\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\");\n\nvar date = ((now.getDate()\u003c10) ? \"0\" : \"\")+ now.getDate();\n\nfunction fourdigits(number)        {\n        return (number \u003c 1000) ? number + 1900 : number;\n                                                                }\ntoday =  days[now.getDay()] + \", \" +\n         months[now.getMonth()] + \" \" +\n         date + \", \" +\n         (fourdigits(now.getYear())) ;\n\nconsole.log(today)"}
{"_id":{"$oid":"57a2aedf9e64e91aafb56a15"},"id":5.0,"name":"Task 5 (b)","description":"Given a 2D array, please sort them by the 2nd element (i.e. names) and then 1st element (i.e. numbers). \n\n\nFor example, if the input array is [[1,\"c\"],[3,\"b\"],[2,\"a\"]], arraySort() should return [[2,\"a\"],[3,\"b\"],[1,\"c\"]]","testCase":[{"code":"sortArray(arr1)","answer":[[1.0,"Cathy"],[3.0,"David"],[5.0,"George"],[2.0,"Pat"],[4.0,"Walt"]],"output":"","match":false},{"code":"sortArray(arr2)","answer":[[0.0,"April"],[3.0,"Bob"],[10.0,"Drew"],[1.0,"Jason"],[9.0,"Katie"]],"output":"","match":false}],"startercode":"var arr1 = [\r\n    [1, \"Cathy\"],\r\n    [2, \"Pat\"],\r\n    [3, \"David\"],\r\n    [4, \"Walt\"],\r\n    [5, \"George\"],\r\n];\r\n    \r\nvar arr2 = [\r\n    [1, \"Jason\"],\r\n    [3, \"Bob\"],\r\n    [10, \"Drew\"],\r\n    [9, \"Katie\"],\r\n    [0, \"April\"],\r\n];\r\n    \r\nfunction sortArray(arr){\r\n    // your code goes here \r\n    return arr;\r\n}\r\n","level1":"You can use .sort function do define two return cases, 1st being the 1st element in the subarray, 2nd being the 2nd element in the subarray.","level2":"The algorithm is like this:\n\nif(a1 == b1)\n   return a0\u003cb0? -1: a0\u003eb0? 1:0;\nend\n\nreturn a1-b1;","code":"var arr1 = [\r\n    [1, \"Cathy\"],\r\n    [2, \"Pat\"],\r\n    [3, \"David\"],\r\n    [4, \"Walt\"],\r\n    [5, \"George\"],\r\n];\r\n    \r\nvar arr2 = [\r\n    [1, \"Jason\"],\r\n    [3, \"Bob\"],\r\n    [10, \"Drew\"],\r\n    [9, \"Katie\"],\r\n    [0, \"April\"],\r\n];\r\n\r\nfunction sortArray(arr){\r\n    arr.sort(function(a, b)\r\n    {\r\n        var x = a[1].toLowerCase(),\r\n            y = b[1].toLowerCase();\r\n        if(x === y)\r\n        {\r\n           return a[0] - b[0];\r\n        }\r\n        \r\n         return x \u003c y ? -1 : x \u003e y ? 1 : 0;\r\n        \r\n    });\r\n    return arr;\r\n}\r\n"}
{"_id":{"$oid":"57a2aeeb9e64e91aafb56a16"},"id":6.0,"name":"Task 6 (b)","description":"Given an object, please write a function to count the number of all object property in it.","testCase":[{"code":"array_object({1:'hello'})","answer":1,"output":"","match":false},{"code":"array_object(obj)","answer":9,"output":"","match":false}],"startercode":"var obj = {\r\n    \"current_job_title\": [{\"engineer\": \"front-end\"}, {\"staff\": \"hr\"}, {\"ceo\": \"personal-startup\"}],\r\n    \"previous_company\": { \"time\": 1996, \"company_name\":  \"Facebook\" },\r\n    \"name\" : \"sam\",\r\n    \"title\": \"student\"\r\n};\r\n\r\nfunction array_object (obj){\r\n\r\n    var size = 0;\r\n    return size;\r\n}\r\n","level1":"You need to be careful here because you have a mixed of array and object. You should detect array and object.","level2":"Define a function to check if the current array element is an object or array (Array.isArray(array_name). Then if it is an object, loop through all properties and do this process again till there is no more sub entre. You can use recursive to check all the subentres.","code":"var obj = {\r\n    \"current_job_title\": [{\"engineer\": \"front-end\"}, {\"staff\": \"hr\"}, {\"ceo\": \"personal-startup\"}],\r\n    \"previous_company\": { \"time\": 1996, \"company_name\":  \"Facebook\" },\r\n    \"name\" : \"sam\",\r\n    \"title\": \"student\"\r\n};\r\n\r\nfunction array_object (obj){\r\n\r\n    var size = 0, key;\r\n    \r\n    for (key in obj) {\r\n        if (obj.hasOwnProperty(key)){\r\n            if (!Array.isArray(obj)){\r\n                size++;\r\n            }\r\n            if(typeof(obj[key])==\"object\"){\r\n                size+=array_object(obj[key]);\r\n            }\r\n        } \r\n    }\r\n    \r\n    return size;\r\n}\r\n","completeAnswer":"This is supposed to be a complete answer, which should be summarized as level1 answer and level 2 answer."}
{"_id":{"$oid":"57a2aef39e64e91aafb56a17"},"id":7.0,"name":"Task 7 (b)","description":"The following code allows you to search the phone number for a given last name in the database. Change the code so that it will look up a phone number by any property (not just last name) that is passed and refactor the example. Please check Akira Laine's number as the final test case. ","testCase":[{"code":"lookUpNumberByProperty(\"Laine\", \"lastName\")","answer":"0543236543","output":"","match":false},{"code":"lookUpNumberByProperty(\"Kristian\", \"firstName\")","answer":"03134234213","output":"","match":false}],"startercode":"var contacts = [\n    {\n        \"firstName\": \"Akira\",\n        \"lastName\": \"Laine\",\n        \"number\": \"0543236543\",\n    },\n    {\n        \"firstName\": \"Harry\",\n        \"lastName\": \"Potter\",\n        \"number\": \"0994372684\",\n    },\n    {\n        \"firstName\": \"Sherlock\",\n        \"lastName\": \"Holmes\",\n        \"number\": \"0487345643\",\n    },\n    {\n        \"firstName\": \"Kristian\",\n        \"lastName\": \"Vos\",\n        \"number\": \"03134234213\",\n    }\n];\n\nfunction lookUpNumberByLastName(lastName){\n  // Only change code below this line\n  for (var i = 0; i \u003c contacts.length; i++) {\n    if (contacts[i].lastName === lastName){\n        return contacts[i].number;\n     }\n  }\n}\n\n","level1":"Square bracket notation in JavaScript will let you use random string to access property of an json object. Return an array whenever you find the matching element. \n","level2":"You can create a function with 2 inputs. Then loop through the array and check if the property is there and if the value of the property equals to the input value. If it is, push it to the array.","code":"var contacts = [\n    {\n        \"firstName\": \"Akira\",\n        \"lastName\": \"Laine\",\n        \"number\": \"0543236543\",\n    },\n    {\n        \"firstName\": \"Harry\",\n        \"lastName\": \"Potter\",\n        \"number\": \"0994372684\",\n    },\n    {\n        \"firstName\": \"Sherlock\",\n        \"lastName\": \"Holmes\",\n        \"number\": \"0487345643\",\n    },\n    {\n        \"firstName\": \"Kristian\",\n        \"lastName\": \"Vos\",\n        \"number\": \"03134234213\",\n    }\n];\n\nfunction lookUpNumberByProperty(value, prop){\n  // Only change code below this line\n  var arr = [];\n  for (var i = 0; i \u003c contacts.length; i++) {\n    if (contacts[i].hasOwnProperty(prop) \u0026\u0026 contacts[i][prop] === value) {\n       return contacts[i].number\n    }\n  }\n}\n\n","completeAnswer":"This is supposed to be a complete answer, which should be summarized as level1 answer and level 2 answer."}
