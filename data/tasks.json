{"_id":{"$oid":"57a2ae929e64e91aafb56a11"},"id":1.0,"name":"Task1 (b) - (sang working on it)","testCase":[{"code":"dollarsign(\"$200\")","answer":true,"output":"","match":false},{"code":"dollarsign(\"$200.10\")","answer":true,"output":"","match":false},{"code":"dollarsign(\"$7.5\")","answer":true,"output":"","match":false},{"code":"dollarsign(\"$20\")","answer":true,"output":"","match":false},{"code":"dollarsign(\"$0.23\")","answer":true,"output":"","match":false},{"code":"dollarsign(\"$1.123\")","answer":false,"output":"","match":false},{"code":"dollarsign(\"$1.\");","answer":false,"output":"","match":false}],"description":"The following function returns \"true\" if the input string is in dollar amount. \nHowever, this function has a bug by making an assumption that the dollar amount has no decimal points. \nPlease fix the bug so that the code will pass all the test cases provided. \n\nHere are some examples. \n\n$10 returns true, $10.5 returns true, $10.50 returns true, $10. returns false, $10.123 returns false. Don't worry about 0 being in front (e.g. $020).","startercode":"function dollarsign(input){\n    var r = /^\\$[0-9]+$/; // correct this line \n    return r.test(input);\n}\n\n","level1":"- the current code makes an assumption dollar amount is $XXX (where X represent a ​one-digit number)\n- $XXX may be followed by [.XX] or [.X] For example, there can be\n- if you do not know regular expression in javascript, please refer the following page https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions","level2":"- Consider code var r = /^\\$[0-9]+\\.[0-9][0-9]$/; \n- This will pass test case of $10.15 as it matches \".XX\" at the end. \n- However, it will return false for $10.5 or $10. \n- In other words, the last digit should be optional and the whole floating point part should be optional. \n- To fix this you need to use ? sign in regex, which matches the preceding expression 0 or 1 time. \n- For example, /^\\$?[0-9]+\\.[0-9][0-9]$/, as it has put \"?\" after the dollar sign (\\$) it will return true for $10.10 and 10.10 as it allows the dollar sign one or more time in th​e beginning.","code":"function dollarsign(input){\n    var r = /^\\$[0-9]+(\\.[0-9][0-9]?)?$/;\n    return r.test(input);\n}\n\n","completeAnswer":"- the current code makes an assumption dollar amount is $XXX (where X represent a ​one-digit number)\n- $XXX may be followed by [.XX] or [.X] For example, there can be\n- if you do not know regular expression in javascript, please refer the following page https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n- Consider code var r = /^\\$[0-9]+\\.[0-9][0-9]$/; \n- This will pass test case of $10.15 as it matches \".XX\" at the end. \n- However, it will return false for $10.5 or $10. \n- In other words, the last digit should be optional and the whole floating point part should be optional. \n- To fix this you need to use ? sign in regex, which matches the preceding expression 0 or 1 time. \n- For example, /^\\$?[0-9]+\\.[0-9][0-9]$/, as it has put \"?\" after the dollar sign (\\$) it will return true for $10.10 and 10.10 as it allows the dollar sign one or more time in the beginning.","ptype":{"name":"Bug Fixing","desc":"Participants sought specific solutions to program errors."},"selected":true,"selectedid":1,"level1time":5,"level2time":5,"level3time":10}
{"_id":{"$oid":"57a2aeb89e64e91aafb56a12"},"id":2.0,"name":"Task 2 (b)","description":"The following code is supposed to print out [0,1,2,3,4]. Please rewrite it so that the code prints out the desired value. Please do not remove setTimeout function.\n\n","testCase":[{"code":"NEED TO CHANGE THE TASK","answer":"I have 300 dollars in my left pocket and 200 dollars in my right pocket.","output":"","match":true},{"code":"replaceDollarSign(\"$421\")","answer":"421 dollars","output":"","match":true}],"startercode":"var a = [];\nfor( var j = 0; j \u003c 5; j++ )\n{\n   setTimeout ( function () {\n       a.push(j)\n       console.log(a);\n   }, j);\n}","level1":"It will output 5,5,5,5,5. Because settimeout is asynchronous function and for loop is synchronous method.","level2":"The erroneous output is returned because j is incremented after each timeout is created. Then when the callback function is called, it looks for j’s value which is always 5. The solution to this is to add some arguments that would store the current value of j. (using closure)","code":"var a = [];\n\nfor( var j = 0; j \u003c 5; j++ )\n{\n   (function (j)  {\n      setTimeout(function () {\n          a.push(j)\n          console.log(a);\n       }, j);\n   }) (j);\n}\n\n","selectedid":-1,"selected":false}
{"_id":{"$oid":"57a2aec29e64e91aafb56a13"},"id":3.0,"name":"Task 3 (b)","description":"The desired return value of test(3) is [0,1,2]. Please correct this code to achieve the correct output.","testCase":[{"code":"test(3)","answer":[0.0,1.0,2.0],"output":"","match":false},{"code":"test(5)","answer":[0.0,1.0,2.0,3.0,4.0],"output":"","match":false}],"startercode":"function test(num){\r\n    \r\n    var a = [],\r\n    funcs = [];\r\n    for (var i = 0; i \u003c num; i++) {          // let's create 3 functions\r\n    funcs[i] = function() {            // and store them in funcs\r\n        a.push(i); // each should log its value.\r\n    };\r\n    }\r\n    for (var j = 0; j \u003c num; j++) {\r\n        funcs[j]();                        // and now let's run each one to see\r\n    }\r\n    \r\n    return a;\r\n}","level1":"Well, the problem is that the variable i, within each of your anonymous functions, is bound to the same variable outside of the function.","level2":"What you want to do is bind the variable within each function to a separate (using .bind(), unchanging value outside of the function.","code":"function test(num){\r\n    var a = [],\r\n    funcs = [];\r\n\r\n    function log(x) {\r\n        a.push(x);\r\n    }\r\n    \r\n    for (var i = 0; i \u003c num; i++) {\r\n        funcs[i] = log.bind(this, i);\r\n    }\r\n    \r\n    for (var j = 0; j \u003c num; j++) {\r\n        funcs[j]();\r\n    }\r\n    return a;\r\n}\r\n\r\n","selectedid":2,"selected":true,"level2time":10,"level1time":10,"level3time":30}
{"_id":{"$oid":"57a2aed59e64e91aafb56a14"},"id":4.0,"name":"Task 4 (b)","description":"Write Javascript code to display the current date in this format: Tuesday, June 21, 2016.","testCase":[{"code":"NEED TO CHANGE THE TASK","answer":[0.0,1.0,2.0],"output":"","match":true},{"code":"datenow()","answer":[0.0,1.0,2.0,3.0,4.0],"output":"","match":true}],"startercode":"function datenow(time){\n\u0009var today;\n\u0009//your code goes here\n\u0009console.log(today)  //should be a string\n}\n\n","level1":"You need to defind array to store the names of 7 days in a week, and 12 months in a year. Then you need to find out which day, month, and year it is. ","level2":"You can use .getDay(), getMonth(), and getYear() to find out each value. But for year, you have to convert it to 4 digits using (year \u003c 1000) ? year + 1900 : year;\n\nTHe final answer is a string and you need to combine these 3 values split by comma. ","code":"var now = new Date();\n\nvar days = new Array(\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\");\n\nvar months = new Array(\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\");\n\nvar date = ((now.getDate()\u003c10) ? \"0\" : \"\")+ now.getDate();\n\nfunction fourdigits(number)        {\n        return (number \u003c 1000) ? number + 1900 : number;\n                                                                }\ntoday =  days[now.getDay()] + \", \" +\n         months[now.getMonth()] + \" \" +\n         date + \", \" +\n         (fourdigits(now.getYear())) ;\n\nconsole.log(today)","selectedid":-1}
{"_id":{"$oid":"57a2aedf9e64e91aafb56a15"},"id":5.0,"name":"Task 5 (b)","description":"Given a 2D array, please sort them by the 2nd element (i.e. names) and then 1st element (i.e. numbers). \n\n\nFor example, if the input array is [[1,\"c\"],[3,\"b\"],[2,\"a\"]], arraySort() should return [[2,\"a\"],[3,\"b\"],[1,\"c\"]]","testCase":[{"code":"sortArray(arr1)","answer":[[1.0,"Cathy"],[3.0,"David"],[5.0,"George"],[2.0,"Pat"],[4.0,"Walt"]],"output":"","match":false},{"code":"sortArray(arr2)","answer":[[0.0,"April"],[3.0,"Bob"],[10.0,"Drew"],[1.0,"Jason"],[9.0,"Katie"]],"output":"","match":false}],"startercode":"var arr1 = [\r\n    [1, \"Cathy\"],\r\n    [2, \"Pat\"],\r\n    [3, \"David\"],\r\n    [4, \"Walt\"],\r\n    [5, \"George\"],\r\n];\r\n    \r\nvar arr2 = [\r\n    [1, \"Jason\"],\r\n    [3, \"Bob\"],\r\n    [10, \"Drew\"],\r\n    [9, \"Katie\"],\r\n    [0, \"April\"],\r\n];\r\n    \r\nfunction sortArray(arr){\r\n    // your code goes here \r\n    return arr;\r\n}\r\n","level1":"You can use .sort function do define two return cases, 1st being the 1st element in the subarray, 2nd being the 2nd element in the subarray.","level2":"The algorithm is like this:\n\nif(a1 == b1)\n   return a0\u003cb0? -1: a0\u003eb0? 1:0;\nend\n\nreturn a1-b1;","code":"var arr1 = [\r\n    [1, \"Cathy\"],\r\n    [2, \"Pat\"],\r\n    [3, \"David\"],\r\n    [4, \"Walt\"],\r\n    [5, \"George\"],\r\n];\r\n    \r\nvar arr2 = [\r\n    [1, \"Jason\"],\r\n    [3, \"Bob\"],\r\n    [10, \"Drew\"],\r\n    [9, \"Katie\"],\r\n    [0, \"April\"],\r\n];\r\n\r\nfunction sortArray(arr){\r\n    arr.sort(function(a, b)\r\n    {\r\n        var x = a[1].toLowerCase(),\r\n            y = b[1].toLowerCase();\r\n        if(x === y)\r\n        {\r\n           return a[0] - b[0];\r\n        }\r\n        \r\n         return x \u003c y ? -1 : x \u003e y ? 1 : 0;\r\n        \r\n    });\r\n    return arr;\r\n}\r\n","selected":true,"selectedid":3,"ptype":{"name":"High-Level Strategic Guidance","desc":"Participants sought best ways to approach problems."},"level1time":null,"level2time":null,"level3time":null}
{"_id":{"$oid":"57a2aeeb9e64e91aafb56a16"},"id":6.0,"name":"Task 6 (b)","description":"Given an object, please write a function to count the number of all object property in it.","testCase":[{"code":"array_object({1:'hello'})","answer":1,"output":"","match":false},{"code":"array_object(obj)","answer":9,"output":"","match":false}],"startercode":"var obj = {\r\n    \"current_job_title\": [{\"engineer\": \"front-end\"}, {\"staff\": \"hr\"}, {\"ceo\": \"personal-startup\"}],\r\n    \"previous_company\": { \"time\": 1996, \"company_name\":  \"Facebook\" },\r\n    \"name\" : \"sam\",\r\n    \"title\": \"student\"\r\n};\r\n\r\nfunction array_object (obj){\r\n\r\n    var size = 0;\r\n    return size;\r\n}\r\n","level1":"You need to be careful here because you have a mixed of array and object. You should detect array and object.","level2":"Define a function to check if the current array element is an object or array (Array.isArray(array_name). Then if it is an object, loop through all properties and do this process again till there is no more sub entre. You can use recursive to check all the subentres.","code":"var obj = {\r\n    \"current_job_title\": [{\"engineer\": \"front-end\"}, {\"staff\": \"hr\"}, {\"ceo\": \"personal-startup\"}],\r\n    \"previous_company\": { \"time\": 1996, \"company_name\":  \"Facebook\" },\r\n    \"name\" : \"sam\",\r\n    \"title\": \"student\"\r\n};\r\n\r\nfunction array_object (obj){\r\n\r\n    var size = 0, key;\r\n    \r\n    for (key in obj) {\r\n        if (obj.hasOwnProperty(key)){\r\n            if (!Array.isArray(obj)){\r\n                size++;\r\n            }\r\n            if(typeof(obj[key])==\"object\"){\r\n                size+=array_object(obj[key]);\r\n            }\r\n        } \r\n    }\r\n    \r\n    return size;\r\n}\r\n","completeAnswer":"This is supposed to be a complete answer, which should be summarized as level1 answer and level 2 answer.","selectedid":4,"selected":true,"ptype":{"name":"Code Requests","desc":"Participants sought specific pieces of code,"},"level1time":null,"level2time":null,"level3time":null}
{"_id":{"$oid":"57a2aef39e64e91aafb56a17"},"id":7.0,"name":"Task 7 (b)","description":"The following function \"lookUpNumberByLastName\" searches a phone number for a given last name from the given array \"contacts\". Change the function to \"lookUpNumberByProperty\" so that it can look up a phone number by any property (not just lastName) that is passed. \n\nFor example, the following code \n\nlookUpNumberByProperty(\"Kristian\", \"firstName\")\n\nshould return \"03134234213\".\n\nIf the property does not exists, it should return null.","testCase":[{"code":"lookUpNumberByProperty(\"Laine\", \"lastName\")","answer":"0543236543","output":"","match":false},{"code":"lookUpNumberByProperty(\"Kristian\", \"firstName\")","answer":"03134234213","output":"","match":false}],"startercode":"var contacts = [\n    {\n        \"firstName\": \"Akira\",\n        \"lastName\": \"Laine\",\n        \"number\": \"0543236543\",\n    },\n    {\n        \"firstName\": \"Harry\",\n        \"lastName\": \"Potter\",\n        \"number\": \"0994372684\",\n    },\n    {\n        \"firstName\": \"Sherlock\",\n        \"lastName\": \"Holmes\",\n        \"number\": \"0487345643\",\n    },\n    {\n        \"firstName\": \"Kristian\",\n        \"lastName\": \"Vos\",\n        \"number\": \"03134234213\",\n    }\n];\n\nfunction lookUpNumberByLastName(lastName){\n  // Only change code below this line\n  for (var i = 0; i \u003c contacts.length; i++) {\n    if (contacts[i].lastName === lastName){\n        return contacts[i].number;\n     }\n  }\n}\n\n","level1":"Square bracket notation in JavaScript will let you use random string to access property of an json object. Return an array whenever you find the matching element. \n","level2":"You can create a function with 2 inputs. Then loop through the array and check if the property is there and if the value of the property equals to the input value. If it is, push it to the array.","code":"var contacts = [\n    {\n        \"firstName\": \"Akira\",\n        \"lastName\": \"Laine\",\n        \"number\": \"0543236543\",\n    },\n    {\n        \"firstName\": \"Harry\",\n        \"lastName\": \"Potter\",\n        \"number\": \"0994372684\",\n    },\n    {\n        \"firstName\": \"Sherlock\",\n        \"lastName\": \"Holmes\",\n        \"number\": \"0487345643\",\n    },\n    {\n        \"firstName\": \"Kristian\",\n        \"lastName\": \"Vos\",\n        \"number\": \"03134234213\",\n    }\n];\n\nfunction lookUpNumberByProperty(value, prop){\n  // Only change code below this line\n  for (var i = 0; i \u003c contacts.length; i++) {\n    if (contacts[i].hasOwnProperty(prop) \u0026\u0026 contacts[i][prop] === value) {\n       return contacts[i].number\n    }\n  }\n  return null;\n}\n\n","completeAnswer":"- make sure you change the function name and its prototype to match the test cases or the example given. \n- Square bracket notation in JavaScript will let you use random string to access a property of a json object.\n- For example, suppose a js array a = {number : 1} and a.number is equivalent to a[\"number\"]\n- Likewise, contacts[0][\"firstName\"] will be equal to \"Akira\".\n- hasOwnProperty will return true if it an object has the property. e.g. ) a.hasOwnProperty(\"number\") will return true for the object.\n- For example, contacts[0].hasOwnProperty(\"firstName\") will return true.","selected":true,"selectedid":5,"level1time":3,"level2time":3,"level3time":5}
{"_id":{"$oid":"57a37092a7377d0715c936ec"},"id":8,"name":"Task 8 (switch and do/while loop) memory aid (TODOs: 1 more test case)","ptype":{"name":"Memory Aids","desc":"Participants sought a specific function name."},"startercode":"function task8(myArray){\n    \n    var checkBo = [0,0];\n    var i = 0;\n    do{\n      switch(){\n        }\n    }while\n    return (checkBo[0] \u0026\u0026 checkBo[1]);\n}","code":"function task8(myArr){\n    \n    var checkBo = [0,0];\n    var i = 0;\n    do{\n      switch(true){\n      \u0009\u0009case (myArr[i] =='hello' \u0026\u0026 i==0):\n          \u0009checkBo[0] = 1;\n            break;\n          case (myArr[i] =='hello' \u0026\u0026 i==2):\n          \u0009checkBo[1] = 1;\n            break;\n          default:\n          \u0009break;\n      }\n      i++;\n    }while(i \u003c myArr.length)\n    // console.log(checkBo[0] \u0026\u0026 checkBo[1])\n    return (checkBo[0] \u0026\u0026 checkBo[1]);\n}\n","description":"Use 'switch' and 'do/while' (but no 'if/else' statement) in JS to loop through an array, and find if the 0th and the 2nd element in the array are string 'hello'. Return a boolean value.\n\nFor example, if the array is ['hello', '1', 'hello'], then return true.","level1":"General syntax for these methods are:\n\nswitch(expression) {\n    case n:\n        code block\n        break;\n    case n:\n        code block\n        break;\n    default:\n        default code block\n}\n\ndo {\n    code block to be executed\n}\nwhile (condition);","level2":"You need to have two conditions in each case, one to check the element value, and the other to check the index value. \n\nswitch(always running){\n  case (condition1)\n    a1 = true\n  case (condition2)\n    a2 = true\n}\n\nreturn a1 \u0026\u0026 a2","testCase":[{"code":"task8(['hello','b','hello'])","answer":1,"output":"","match":false}],"selectedid":6,"selected":true,"level1time":30,"level2time":30,"level3time":30}
{"_id":{"$oid":"57a398baa7377d0715c936ee"},"id":9,"name":"Task 9 (scope) (TODOS: level 3 answer is not running properly)","code":"// this code works fine in js bin but not here\n// http://jsbin.com/xutehezoxi/edit?js,console\n// var a = 200;\n// var b = 2;\n// var myObj = {\n// \u0009a: 20,\n// \u0009b: 5,\n// \u0009calculateIt: function () {\n//   setTimeout (function  () {\n// \u0009    return (myObj.a * this.b);\n//    });\n// \u0009}\n// };\n\nfunction test(){\n    return 40;\n}\n","testCase":[{"code":"test()","answer":"40","output":"","match":false}],"ptype":{"name":"Code Requests","desc":"Participants sought specific pieces of code,"},"description":"Inside setTimeout function, please multiply the 1st 'b' variable (2), and 2nd 'a' variable (20), and return the results (40);","startercode":"var a = 200;\nvar b = 2;\n\nvar myObj = {\n\u0009a: 20,\n\u0009b: 5,\n\u0009calculateIt: function () {\n        setTimeout (function  () {\n         //return (1st b * 2nd a);\n      });\n\u0009}\n}\n\nmyObj.calculateIt(); // 40\n","selectedid":-1}
{"_id":{"$oid":"57a4c8b2a7377d0715c936f0"},"id":10,"name":"newTask-10(no content yet)","description":"Given an array, write a function to remove the elements in this array that are not 5-digit integers from the array. Then, for each element in the new array, calculate the sum of its digits, sort the sums decreasingly and print it as a new array. \n\nFor example, the input array is [14230, 'hello', 36831]. The Correct output: [21,10] (remove 'hello' element, and add each digit for the rest element: 1+4+2+3+0 = 10,  3+6+8+3+1 = 21, and then sort them].)","testCase":[{"code":"manipulateArray([123,423,\"asb\", 91234, \"world\", \"hello\", undefined, 31234, 54231])","answer":"[19, 15, 13]","output":"","match":false}],"code":"\nfunction manipulateArray(arr){\n    var newArr = [];\n    var tempStr;\n    var tempArr;\n    var i = 0;\n    for (i = 0; i \u003c arr.length; i++) {\n      if(!isNaN(arr[i])\u0026\u0026arr[i]/10000\u003e=1){\n        newArr.push(arr[i]);\n      }\n    }\n\n    for (i = 0; i \u003c newArr.length; i++) {\n      tempStr = newArr[i].toString();\n      tempArr = tempStr.split(\"\");\n      var sum = 0;\n      for (var j = 0; j \u003c tempArr.length; j++) {\n        sum = sum + parseInt(tempArr[j]);\n      }\n      newArr[i] = sum;\n    }\n     console.log(newArr)\n     \n     newArr.sort(function(a,b){return b - a;})\n     return newArr;\n}","selectedid":-1}
{"_id":{"$oid":"57a4cdd9a7377d0715c936f1"},"id":11,"name":"Task 11 use every method in array","ptype":{"name":"Code Requests","desc":"Participants sought specific pieces of code,"},"description":"Use '.every' array method in JS to write a function that returns the index of the 1st non-integer element in an array. For example, if input is ['123', 123, 2], it should return 1.","code":"function firstInt(a){\nvar o;\n  \na.every(function(ele, ind){\n  if (ele === parseInt(ele, 10)){\n    o = ind;\n    return false\n  }\n    \n  return true;\n})\n\nreturn o;\n}","testCase":[{"code":"firstInt( ['123','0',2,'hel','',3,5,4])","answer":"2","output":"","match":false}],"selectedid":-1}
{"_id":{"$oid":"57a4d810a7377d0715c936f2"},"id":12,"name":"newTask-12(no content yet)","code":"var num = 10,\n    name = \"Addy\",\n    obj1 = {\n      value: 'first value',\n      set: 'ok'\n    },\n    obj2 = {\n     value: 'second value',\n      set: 'alright'\n    };\n change(num, name, obj1, obj2)\nfunction change(num, name, obj1, obj2) {\n    this.num = num * 10;\n    this.name = \"Paul\";\n    obj1 = obj2;\n    // obj2.value = \"new value\";\n    \n    console.log([this.num, this.name, obj1]);\n}\n \n\n","testCase":[{"code":"change([100,\"Paul\",{\"value\":\"first value\"},{\"value\":\"second value\"}])","answer":"","output":"","match":false}],"description":"Manipulate different types of variables. Given an array, square the value of the first element, change the value of second element to 'Paul', and assign the 3rd element the same value as the 4th element.","selectedid":-1}
{"_id":{"$oid":"57a4edcfa7377d0715c936f3"},"id":13,"name":"newTask-13(no content yet)","selectedid":-1}
{"_id":{"$oid":"57ab3082f8d7fe59a3f53969"},"id":14,"name":"Memory Aids (Circle Area)","ptype":{"name":"Memory Aids","desc":"Participants sought a specific function name."},"description":"Write a javascript function that takes the coordinates of two 2D point (x1, y1, x2, y2)  as input parameters and returns the area of a ​circle of which diameter is the line between two points specified. Don't hard-code PI value.","completeAnswer":"- The area of a circle is \"πr²\" where \"r\" is the radius of the circle and \"π\" is a  mathematical constant. \n- As the line of between two points is the diameter of the circle, the distance between two points will be the diameter, which is equal to two times the radius) \n- The line between two points for 2D can be induced using the following equation : Square root of {(x1- x2)² + (y1- y2)²}\n- Javascript has \"Math\" object for mathematical calculations to solve this problem including Math.PI, Math.pow, Math.sqrt.","level2":"- The line between two points for 2D can be induced using the following equation : Square root of {(x1- x2)² + (y1- y2)²}\n- Javascript has \"Math\" object for mathematical calculations to solve this problem including Math.PI, Math.pow, Math.sqrt.","level1":"- The area of a circle is \"πr²\" where \"r\" is the radius of the circle and \"π\" is a  mathematical constant. \n- As the line of between two points is the diameter of the circle, the distance between two points will be the diameter, which is equal to two times the radius.","code":"function areaCircle(x1,y1,x2,y2){\n\n    var diameter = Math.sqrt(Math.pow(x1-x2,2) + Math.pow(y1-y2,2));\n    var radius = diameter/2;\n    \n    return Math.PI * Math.pow(radius,2);\n}","startercode":"function areaCircle(x1,y1,x2,y2){\n    // your code goes here\n    return 0;\n}","testCase":[{"code":"areaCircle(0,0,1,1)","answer":1.570796326794897,"output":"","match":false},{"code":"areaCircle(1,2,7,-6)","answer":78.53981633974483,"output":"","match":false}],"level1time":60,"level2time":60,"level3time":180,"selected":true,"selectedid":7}
{"_id":{"$oid":"57ab55ece1c830689a462f15"},"id":15,"name":"newTask-15(no content yet)","selectedid":-1}
{"_id":{"$oid":"57abf70098ac0d6d95945e88"},"id":16,"name":"sang testcase testing","code":"function test(){\n    return \"foo\";\n}","testCase":[{"code":"test();","answer":"foo","output":"","match":false}],"level1time":null,"level2time":null,"level3time":null,"selectedid":-1}
